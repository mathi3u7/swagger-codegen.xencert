name: Jekyll site CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:{
	"name": "vscode-docker",
	"version": "1.29.6",
	"publisher": "ms-azuretools",
	"displayName": "Docker",
	"description": "Makes it easy to create, manage, and debug containerized applications.",
	"license": "SEE LICENSE IN LICENSE.md",
	"icon": "resources/docker_blue.png",
	"aiKey": "0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255",
	"galleryBanner": {
		"color": "#1e1e1e",
		"theme": "dark"
	},
	"categories": [
		"Programming Languages",
		"Linters",
		"Azure"
	],
	"keywords": [
		"docker",
		"compose",
		"container",
		"containers",
		"multi-root ready"
	],
	"repository": {
		"type": "git",
		"url": "https://github.com/microsoft/vscode-docker"
	},
	"homepage": "https://github.com/Microsoft/vscode-docker/blob/main/README.md",
	"activationEvents": [
		"onTaskType:docker-build",
		"onTaskType:docker-run",
		"onTaskType:docker-compose",
		"onDebugInitialConfigurations",
		"onDebugResolve:docker",
		"onFileSystem:docker",
		"onLanguage:dockerfile",
		"onLanguage:dockercompose"
	],
	"main": "main",
	"contributes": {
		"menus": {
			"commandPalette": [
				{
					"command": "vscode-docker.openDockerDownloadPage",
					"when": "never"
				},
				{
					"command": "vscode-docker.containers.downloadFile",
					"when": "never"
				},
				{
					"command": "vscode-docker.containers.openFile",
					"when": "never"
				},
				{
					"command": "vscode-docker.containers.select",
					"when": "never"
				},
				{
					"command": "vscode-docker.registries.reconnectRegistry",
					"when": "never"
				},
				{
					"command": "vscode-docker.containers.composeGroup.logs",
					"when": "config.docker.containers.groupBy == 'Compose Project Name'"
				},
				{
					"command": "vscode-docker.containers.composeGroup.start",
					"when": "config.docker.containers.groupBy == 'Compose Project Name'"
				},
				{
					"command": "vscode-docker.containers.composeGroup.stop",
					"when": "config.docker.containers.groupBy == 'Compose Project Name'"
				},
				{
					"command": "vscode-docker.containers.composeGroup.restart",
					"when": "never"
				},
				{
					"command": "vscode-docker.containers.composeGroup.down",
					"when": "never"
				},
				{
					"command": "vscode-docker.compose.down",
					"when": "isWorkspaceTrusted"
				},
				{
					"command": "vscode-docker.compose.restart",
					"when": "isWorkspaceTrusted"
				},
				{
					"command": "vscode-docker.compose.up",
					"when": "isWorkspaceTrusted"
				},
				{
					"command": "vscode-docker.compose.up.subset",
					"when": "isWorkspaceTrusted"
				},
				{
					"command": "vscode-docker.configure",
					"when": "isWorkspaceTrusted"
				},
				{
					"command": "vscode-docker.configureCompose",
					"when": "isWorkspaceTrusted"
				},
				{
					"command": "vscode-docker.debugging.initializeForDebugging",
					"when": "isWorkspaceTrusted"
				},
				{
					"command": "vscode-docker.images.build",
					"when": "isWorkspaceTrusted"
				},
				{
					"command": "vscode-docker.registries.azure.buildImage",
					"when": "isWorkspaceTrusted"
				},
				{
					"command": "vscode-docker.help.openWalkthrough",
					"when": "never"
				},
				{
					"command": "vscode-docker.images.showDangling",
					"when": "never"
				},
				{
					"command": "vscode-docker.images.hideDangling",
					"when": "never"
				},
				{
					"command": "vscode-docker.images.group.remove",
					"when": "never"
				},
				{
					"command": "vscode-docker.containers.group.remove",
					"when": "never"
				},
				{
					"command": "vscode-docker.activateRegistryProviders",
					"when": "never"
				}
			],
			"editor/context": [
				{
					"when": "isWorkspaceTrusted && editorLangId == dockerfile",
					"command": "vscode-docker.registries.azure.buildImage",
					"group": "docker"
				},
				{
					"when": "isWorkspaceTrusted && editorLangId == dockercompose",
					"command": "vscode-docker.compose.down",
					"group": "docker"
				},
				{
					"when": "isWorkspaceTrusted && editorLangId == dockercompose",
					"command": "vscode-docker.compose.restart",
					"group": "docker"
				},
				{
					"when": "isWorkspaceTrusted && editorLangId == dockercompose",
					"command": "vscode-docker.compose.up",
					"group": "docker"
				},
				{
					"when": "isWorkspaceTrusted && editorLangId == dockercompose",
					"command": "vscode-docker.compose.up.subset",
					"group": "docker"
				},
				{
					"when": "isWorkspaceTrusted && editorLangId == dockerfile",
					"command": "vscode-docker.images.build",
					"group": "docker"
				}
			],
			"explorer/context": [
				{
					"when": "isWorkspaceTrusted && resourceFilename =~ /dockerfile/i",
					"command": "vscode-docker.registries.azure.buildImage",
					"group": "docker"
				},
				{
					"when": "isWorkspaceTrusted && resourceLangId == dockercompose",
					"command": "vscode-docker.compose.down",
					"group": "docker"
				},
				{
					"when": "isWorkspaceTrusted && resourceLangId == dockercompose",
					"command": "vscode-docker.compose.restart",
					"group": "docker"
				},
				{
					"when": "isWorkspaceTrusted && resourceLangId == dockercompose",
					"command": "vscode-docker.compose.up",
					"group": "docker"
				},
				{
					"when": "isWorkspaceTrusted && resourceLangId == dockercompose",
					"command": "vscode-docker.compose.up.subset",
					"group": "docker"
				},
				{
					"when": "isWorkspaceTrusted && resourceLangId == dockerfile",
					"command": "vscode-docker.images.build",
					"group": "docker"
				}
			],
			"view/title": [
				{
					"command": "vscode-docker.containers.prune",
					"when": "view == dockerContainers",
					"group": "navigation@1"
				},
				{
					"command": "vscode-docker.containers.configureExplorer",
					"when": "view == dockerContainers",
					"group": "navigation@8"
				},
				{
					"command": "vscode-docker.networks.configureExplorer",
					"when": "view == dockerNetworks",
					"group": "navigation@8"
				},
				{
					"command": "vscode-docker.containers.refresh",
					"when": "view == dockerContainers",
					"group": "navigation@9"
				},
				{
					"command": "vscode-docker.networks.create",
					"when": "view == dockerNetworks",
					"group": "navigation@1"
				},
				{
					"command": "vscode-docker.networks.prune",
					"when": "view == dockerNetworks",
					"group": "navigation@2"
				},
				{
					"command": "vscode-docker.networks.refresh",
					"when": "view == dockerNetworks",
					"group": "navigation@9"
				},
				{
					"command": "vscode-docker.images.prune",
					"when": "view == dockerImages",
					"group": "navigation@2"
				},
				{
					"command": "vscode-docker.images.showDangling",
					"when": "view == dockerImages && !vscode-docker:danglingShown",
					"group": "navigation@3"
				},
				{
					"command": "vscode-docker.images.hideDangling",
					"when": "view == dockerImages && vscode-docker:danglingShown",
					"group": "navigation@3"
				},
				{
					"command": "vscode-docker.images.configureExplorer",
					"when": "view == dockerImages",
					"group": "navigation@8"
				},
				{
					"command": "vscode-docker.images.refresh",
					"when": "view == dockerImages",
					"group": "navigation@9"
				},
				{
					"command": "vscode-docker.registries.refresh",
					"when": "view == dockerRegistries",
					"group": "navigation@9"
				},
				{
					"command": "vscode-docker.registries.connectRegistry",
					"when": "view == dockerRegistries",
					"group": "navigation@1"
				},
				{
					"command": "vscode-docker.registries.help",
					"when": "view == dockerRegistries",
					"group": "navigation@10"
				},
				{
					"command": "vscode-docker.volumes.prune",
					"when": "view == dockerVolumes",
					"group": "navigation@1"
				},
				{
					"command": "vscode-docker.volumes.configureExplorer",
					"when": "view == dockerVolumes",
					"group": "navigation@8"
				},
				{
					"command": "vscode-docker.volumes.refresh",
					"when": "view == dockerVolumes",
					"group": "navigation@9"
				},
				{
					"command": "vscode-docker.contexts.configureExplorer",
					"when": "view == vscode-docker.views.dockerContexts",
					"group": "navigation@8"
				},
				{
					"command": "vscode-docker.contexts.refresh",
					"when": "view == vscode-docker.views.dockerContexts",
					"group": "navigation@9"
				},
				{
					"command": "vscode-docker.contexts.help",
					"when": "view == vscode-docker.views.dockerContexts",
					"group": "navigation@10"
				},
				{
					"command": "vscode-docker.help",
					"when": "view == dockerContainers || view == dockerImages || view == dockerVolumes || view == dockerNetworks",
					"group": "navigation@10"
				}
			],
			"view/item/context": [
				{
					"command": "vscode-docker.containers.viewLogs",
					"when": "view == dockerContainers && viewItem =~ /container$/i",
					"group": "containers_1_general@1"
				},
				{
					"command": "vscode-docker.containers.attachShell",
					"when": "view == dockerContainers && viewItem =~ /^runningContainer$/i",
					"group": "containers_1_general@2"
				},
				{
					"command": "vscode-docker.containers.inspect",
					"when": "view == dockerContainers && viewItem =~ /container$/i",
					"group": "containers_1_general@3"
				},
				{
					"command": "vscode-docker.containers.browse",
					"when": "view == dockerContainers && viewItem =~ /runningContainer$/i",
					"group": "containers_1_general@4"
				},
				{
					"command": "vscode-docker.containers.start",
					"when": "view == dockerContainers && viewItem =~ /^(created|dead|exited|paused|terminated)Container$/i",
					"group": "containers_1_general@5"
				},
				{
					"command": "vscode-docker.containers.downloadFile",
					"when": "view == dockerContainers && viewItem == containerFile",
					"group": "files_1@2"
				},
				{
					"command": "vscode-docker.containers.openFile",
					"when": "view == dockerContainers && viewItem == containerFile",
					"group": "files_1@1"
				},
				{
					"command": "vscode-docker.containers.stop",
					"when": "view == dockerContainers && viewItem =~ /^(paused|restarting|running)Container$/i",
					"group": "containers_1_general@6"
				},
				{
					"command": "vscode-docker.containers.restart",
					"when": "view == dockerContainers && viewItem =~ /^runningContainer$/i",
					"group": "containers_1_general@7"
				},
				{
					"command": "vscode-docker.containers.remove",
					"when": "view == dockerContainers && viewItem =~ /container$/i",
					"group": "containers_2_destructive@1"
				},
				{
					"command": "vscode-docker.containers.group.remove",
					"when": "view == dockerContainers && viewItem =~ /containerGroup$/i",
					"group": "containers_group_1_destructive@1"
				},
				{
					"command": "vscode-docker.containers.composeGroup.logs",
					"when": "view == dockerContainers && viewItem =~ /composeGroup$/i",
					"group": "composeGroup_1_general@1"
				},
				{
					"command": "vscode-docker.containers.composeGroup.start",
					"when": "view == dockerContainers && viewItem =~ /composeGroup$/i",
					"group": "composeGroup_1_general@2"
				},
				{
					"command": "vscode-docker.containers.composeGroup.stop",
					"when": "view == dockerContainers && viewItem =~ /composeGroup$/i",
					"group": "composeGroup_1_general@3"
				},
				{
					"command": "vscode-docker.containers.composeGroup.restart",
					"when": "view == dockerContainers && viewItem =~ /composeGroup$/i",
					"group": "composeGroup_2_destructive@1"
				},
				{
					"command": "vscode-docker.containers.composeGroup.down",
					"when": "view == dockerContainers && viewItem =~ /composeGroup$/i",
					"group": "composeGroup_2_destructive@2"
				},
				{
					"command": "vscode-docker.images.run",
					"when": "view == dockerImages && viewItem == image",
					"group": "images_1_run@1"
				},
				{
					"command": "vscode-docker.images.runInteractive",
					"when": "view == dockerImages && viewItem == image",
					"group": "images_1_run@2"
				},
				{
					"command": "vscode-docker.images.inspect",
					"when": "view == dockerImages && viewItem == image",
					"group": "images_2_general@1"
				},
				{
					"command": "vscode-docker.images.pull",
					"when": "view == dockerImages && viewItem == image",
					"group": "images_2_general@2"
				},
				{
					"command": "vscode-docker.images.push",
					"when": "view == dockerImages && viewItem == image",
					"group": "images_2_general@3"
				},
				{
					"command": "vscode-docker.images.tag",
					"when": "view == dockerImages && viewItem == image",
					"group": "images_2_general@4"
				},
				{
					"command": "vscode-docker.images.copyFullTag",
					"when": "view == dockerImages && viewItem == image",
					"group": "images_2_general@5"
				},
				{
					"command": "vscode-docker.images.remove",
					"when": "view == dockerImages && viewItem == image",
					"group": "images_3_destructive@1"
				},
				{
					"command": "vscode-docker.images.group.remove",
					"when": "view == dockerImages && viewItem =~ /imageGroup$/i",
					"group": "images_group_1_destructive@1"
				},
				{
					"command": "vscode-docker.networks.inspect",
					"when": "view == dockerNetworks && viewItem =~ /network$/i",
					"group": "networks_1_general@1"
				},
				{
					"command": "vscode-docker.networks.remove",
					"when": "view == dockerNetworks && viewItem =~ /^customNetwork$/i",
					"group": "networks_2_destructive@1"
				},
				{
					"command": "vscode-docker.registries.azure.createRegistry",
					"when": "view == dockerRegistries && viewItem =~ /azuresubscription/i",
					"group": "regs_1_general@1"
				},
				{
					"command": "vscode-docker.registries.azure.deleteRegistry",
					"when": "view == dockerRegistries && viewItem =~ /azure;.*commonregistry/i",
					"group": "regs_reg_2_destructive@1"
				},
				{
					"command": "vscode-docker.registries.pullRepository",
					"when": "view == dockerRegistries && viewItem =~ /commonrepository/",
					"group": "regs_repo_1_general@1"
				},
				{
					"command": "vscode-docker.registries.azure.deleteRepository",
					"when": "view == dockerRegistries && viewItem =~ /azure;.*commonrepository/i",
					"group": "regs_repo_2_destructive@1"
				},
				{
					"command": "vscode-docker.registries.pullImage",
					"when": "view == dockerRegistries && viewItem =~ /commontag/i",
					"group": "regs_tag_1_general@1"
				},
				{
					"command": "vscode-docker.registries.copyRemoteFullTag",
					"when": "view == dockerRegistries && viewItem =~ /commontag/i",
					"group": "regs_tag_1_general@2"
				},
				{
					"command": "vscode-docker.registries.copyImageDigest",
					"when": "view == dockerRegistries && viewItem =~ /commontag/i && !(viewItem =~ /commontag;.*dockerhub/i)",
					"group": "regs_tag_1_general@3"
				},
				{
					"command": "vscode-docker.registries.inspectRemoteImageManifest",
					"when": "view == dockerRegistries && viewItem =~ /commontag/i && !(viewItem =~ /commontag;.*dockerhub/i)",
					"group": "regs_tag_1_general@4"
				},
				{
					"command": "vscode-docker.registries.deployImageToAzure",
					"when": "view == dockerRegistries && viewItem =~ /commontag/i",
					"group": "regs_tag_1_general@5"
				},
				{
					"command": "vscode-docker.registries.deployImageToAca",
					"when": "view == dockerRegistries && viewItem =~ /commontag/i",
					"group": "regs_tag_1_general@6"
				},
				{
					"command": "vscode-docker.registries.azure.untagImage",
					"when": "view == dockerRegistries && viewItem =~ /azure;.*commontag/i",
					"group": "regs_tag_2_destructive@1"
				},
				{
					"command": "vscode-docker.registries.deleteImage",
					"when": "view == dockerRegistries && viewItem =~ /commontag/i && !(viewItem =~ /commontag;.*(dockerhub|github)/i)",
					"group": "regs_tag_2_destructive@2"
				},
				{
					"command": "vscode-docker.registries.disconnectRegistry",
					"when": "view == dockerRegistries && viewItem =~ /commonregistryroot/i",
					"group": "regs_yyy_destructive@1"
				},
				{
					"command": "vscode-docker.registries.genericV2.removeTrackedRegistry",
					"when": "view == dockerRegistries && viewItem =~ /commonregistry;.*generic/i",
					"group": "regs_yyy_destructive@1"
				},
				{
					"command": "vscode-docker.registries.genericV2.addTrackedRegistry",
					"when": "view == dockerRegistries && viewItem =~ /commonregistryroot;.*generic/i",
					"group": "regs_yyy_destructive@1"
				},
				{
					"command": "vscode-docker.registries.azure.openInPortal",
					"when": "view == dockerRegistries && viewItem =~ /azuresubscription|azure;.*(commonregistry|commonrepository)/i",
					"group": "regs_zzz_common@1"
				},
				{
					"command": "vscode-docker.registries.dockerHub.openInBrowser",
					"when": "view == dockerRegistries && viewItem =~ /(commonregistry|commonrepository|commontag);.*dockerhub/i",
					"group": "regs_zzz_common@1"
				},
				{
					"command": "vscode-docker.registries.azure.viewProperties",
					"when": "view == dockerRegistries && viewItem =~ /azure;.*commonregistry/i",
					"group": "regs_zzz_common@2"
				},
				{
					"command": "vscode-docker.registries.reconnectRegistry",
					"when": "view == dockerRegistries && viewItem =~ /registryConnectError/i",
					"group": "regs_zzz_common@8"
				},
				{
					"command": "vscode-docker.registries.refresh",
					"when": "view == dockerRegistries && viewItem == connectedRegistries",
					"group": "regs_zzz_common@9"
				},
				{
					"command": "vscode-docker.registries.refresh",
					"when": "view == dockerRegistries && viewItem =~ /commonregistry|commonregistryroot|commonrepository/",
					"group": "regs_zzz_common@9"
				},
				{
					"command": "vscode-docker.volumes.inspect",
					"when": "view == dockerVolumes && viewItem == volume",
					"group": "volumes_1_general@1"
				},
				{
					"command": "vscode-docker.volumes.remove",
					"when": "view == dockerVolumes && viewItem == volume",
					"group": "volumes_2_destructive@1"
				},
				{
					"command": "vscode-docker.contexts.inspect",
					"when": "view == vscode-docker.views.dockerContexts && viewItem =~ /Context/i",
					"group": "contexts_1_general@1"
				},
				{
					"command": "vscode-docker.contexts.use",
					"when": "view == vscode-docker.views.dockerContexts && viewItem =~ /Context/i",
					"group": "contexts_1_general@2"
				},
				{
					"command": "vscode-docker.contexts.use",
					"when": "view == vscode-docker.views.dockerContexts && viewItem =~ /Context/i",
					"group": "inline"
				},
				{
					"command": "vscode-docker.contexts.remove",
					"when": "view == vscode-docker.views.dockerContexts && viewItem =~ /^customContext/i",
					"group": "contexts_2_destructive@1"
				},
				{
					"command": "vscode-docker.containers.downloadFile",
					"when": "view == dockerContainers && viewItem == containerFile",
					"group": "inline@2"
				},
				{
					"command": "vscode-docker.containers.openFile",
					"when": "view == dockerContainers && viewItem == containerFile",
					"group": "inline@1"
				}
			],
			"issue/reporter": [
				{
					"command": "vscode-docker.help.reportIssue"
				}
			]
		},
		"debuggers": [
			{
				"type": "docker",
				"label": "Docker: Debug in Container",
				"languages": [
					"csharp",
					"razor",
					"aspnetcorerazor",
					"vb",
					"fsharp"
				],
				"configurationAttributes": {
					"launch": {
						"properties": {
							"containerName": {
								"type": "string",
								"description": "%vscode-docker.debug.containerName%"
							},
							"dockerServerReadyAction": {
								"description": "%vscode-docker.debug.dockerServerReadyAction.description%",
								"properties": {
									"action": {
										"type": "string",
										"description": "%vscode-docker.debug.dockerServerReadyAction.action%",
										"enum": [
											"debugWithChrome",
											"openExternally"
										]
									},
									"containerName": {
										"type": "string",
										"description": "%vscode-docker.debug.dockerServerReadyAction.containerName%"
									},
									"pattern": {
										"type": "string",
										"description": "%vscode-docker.debug.dockerServerReadyAction.pattern%",
										"default": "(https?://\\S+|[0-9]+)"
									},
									"uriFormat": {
										"type": "string",
										"description": "%vscode-docker.debug.dockerServerReadyAction.uriFormat%",
										"default": "http://localhost:%s"
									},
									"webRoot": {
										"type": "string",
										"description": "%vscode-docker.debug.dockerServerReadyAction.webRoot%"
									}
								}
							},
							"removeContainerAfterDebug": {
								"type": "boolean",
								"description": "%vscode-docker.debug.removeContainerAfterDebug%",
								"default": true
							},
							"platform": {
								"type": "string",
								"description": "%vscode-docker.debug.platform%",
								"enum": [
									"netCore",
									"node",
									"python"
								]
							},
							"netCore": {
								"description": "%vscode-docker.debug.netCore.description%",
								"properties": {
									"appProject": {
										"type": "string",
										"description": "%vscode-docker.debug.netCore.appProject%"
									}
								},
								"required": [
									"appProject"
								]
							},
							"node": {
								"description": "%vscode-docker.debug.node.description%",
								"properties": {
									"port": {
										"type": "integer",
										"description": "%vscode-docker.debug.node.port%"
									},
									"address": {
										"type": "string",
										"description": "%vscode-docker.debug.node.address%"
									},
									"sourceMaps": {
										"type": "boolean",
										"description": "%vscode-docker.debug.node.sourceMaps%"
									},
									"outFiles": {
										"type": "array",
										"description": "%vscode-docker.debug.node.outFiles%",
										"items": {
											"type": "string"
										}
									},
									"autoAttachChildProcesses": {
										"type": "boolean",
										"description": "%vscode-docker.debug.node.autoAttachChildProcesses%"
									},
									"timeout": {
										"type": "integer",
										"description": "%vscode-docker.debug.node.timeout%"
									},
									"stopOnEntry": {
										"type": "boolean",
										"description": "%vscode-docker.debug.node.stopOnEntry%"
									},
									"localRoot": {
										"type": "string",
										"description": "%vscode-docker.debug.node.localRoot%"
									},
									"package": {
										"type": "string",
										"description": "%vscode-docker.debug.node.package%"
									},
									"remoteRoot": {
										"type": "string",
										"description": "%vscode-docker.debug.node.remoteRoot%"
									},
									"smartStep": {
										"type": "boolean",
										"description": "%vscode-docker.debug.node.smartStep%"
									},
									"skipFiles": {
										"type": "array",
										"description": "%vscode-docker.debug.node.skipFiles%",
										"items": {
											"type": "string"
										}
									},
									"trace": {
										"type": "boolean",
										"description": "%vscode-docker.debug.node.trace%"
									}
								}
							},
							"python": {
								"description": "%vscode-docker.debug.python.description%",
								"properties": {
									"host": {
										"type": "string",
										"description": "%vscode-docker.debug.python.host%",
										"default": "localhost"
									},
									"port": {
										"type": "number",
										"description": "%vscode-docker.debug.python.port%",
										"default": 5678
									},
									"pathMappings": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"localRoot": {
													"type": "string",
													"description": "%vscode-docker.debug.python.pathMappings.localRoot%"
												},
												"remoteRoot": {
													"type": "string",
													"description": "%vscode-docker.debug.python.pathMappings.remoteRoot%"
												}
											}
										}
									},
									"justMyCode": {
										"type": "boolean",
										"description": "%vscode-docker.debug.python.justMyCode%"
									},
									"django": {
										"type": "boolean",
										"description": "%vscode-docker.debug.python.django%",
										"default": false
									},
									"fastapi": {
										"type": "boolean",
										"description": "%vscode-docker.debug.python.fastapi%",
										"default": false
									},
									"jinja": {
										"type": "boolean",
										"description": "%vscode-docker.debug.python.jinja%",
										"default": false
									},
									"projectType": {
										"type": "string",
										"description": "%vscode-docker.debug.python.projectType%",
										"enum": [
											"django",
											"fastapi",
											"flask",
											"general"
										]
									},
									"args": {
										"type": "array",
										"description": "%vscode-docker.debug.python.args%",
										"items": {
											"type": "string"
										}
									}
								}
							}
						}
					},
					"attach": {
						"properties": {
							"containerName": {
								"type": "string",
								"description": "%vscode-docker.debug.attach.containerName%"
							},
							"processName": {
								"type": "string",
								"description": "%vscode-docker.debug.attach.processName%"
							},
							"processId": {
								"anyOf": [
									{
										"type": "string",
										"description": "%vscode-docker.debug.attach.processIdString%",
										"default": "${command:pickProcess}"
									},
									{
										"type": "integer",
										"description": "%vscode-docker.debug.attach.processIdInteger%",
										"default": 0
									}
								]
							},
							"platform": {
								"type": "string",
								"description": "%vscode-docker.debug.attach.platform%",
								"enum": [
									"netCore"
								]
							},
							"sourceFileMap": {
								"type": "object",
								"description": "%vscode-docker.debug.attach.sourceFileMap%",
								"additionalProperties": {
									"type": "string"
								},
								"default": {
									"<insert-source-path-here>": "<insert-target-path-here>"
								}
							},
							"netCore": {
								"description": "%vscode-docker.debug.attach.netCore.description%",
								"properties": {
									"debuggerPath": {
										"type": "string",
										"description": "%vscode-docker.debug.attach.netCore.debuggerPath%"
									}
								}
							}
						}
					}
				},
				"configurationSnippets": [
					{
						"label": "Docker: Attach to Node",
						"description": "Docker: Attach to Node",
						"body": {
							"type": "node",
							"request": "attach",
							"name": "Docker: Attach to Node",
							"remoteRoot": "/usr/src/app"
						}
					},
					{
						"label": "Docker: .NET Attach (Preview)",
						"description": "Docker: Attach to a .NET process in a container",
						"body": {
							"name": "Docker .NET Attach (Preview)",
							"type": "docker",
							"request": "attach",
							"platform": "netCore",
							"sourceFileMap": {
								"/src": "^\"\\${workspaceFolder}\""
							}
						}
					}
				]
			}
		],
		"taskDefinitions": [
			{
				"type": "docker-build",
				"properties": {
					"dockerBuild": {
						"description": "%vscode-docker.tasks.docker-build.dockerBuild.description%",
						"properties": {
							"buildArgs": {
								"type": "object",
								"description": "%vscode-docker.tasks.docker-build.dockerBuild.buildArgs%",
								"additionalProperties": {
									"type": "string"
								}
							},
							"context": {
								"type": "string",
								"description": "%vscode-docker.tasks.docker-build.dockerBuild.context%",
								"default": "${workspaceFolder}"
							},
							"dockerfile": {
								"type": "string",
								"description": "%vscode-docker.tasks.docker-build.dockerBuild.dockerfile%",
								"default": "${workspaceFolder}/Dockerfile"
							},
							"labels": {
								"type": "object",
								"description": "%vscode-docker.tasks.docker-build.dockerBuild.labels.description%",
								"properties": {
									"includeDefaults": {
										"type": "boolean",
										"description": "%vscode-docker.tasks.docker-build.dockerBuild.labels.includeDefaults%",
										"default": true
									}
								},
								"additionalProperties": {
									"type": "string"
								}
							},
							"platform": {
								"anyOf": [
									{
										"type": "object",
										"properties": {
											"os": {
												"anyOf": [
													{
														"type": "string",
														"enum": [
															"linux",
															"darwin",
															"windows"
														]
													},
													{
														"type": "string"
													}
												],
												"description": "%vscode-docker.tasks.docker-build.dockerBuild.platform.os%"
											},
											"architecture": {
												"anyOf": [
													{
														"type": "string",
														"enum": [
															"amd64",
															"386",
															"arm64",
															"arm"
														]
													},
													{
														"type": "string"
													}
												],
												"description": "%vscode-docker.tasks.docker-build.dockerBuild.platform.architecture%"
											}
										}
									},
									{
										"type": "string",
										"enum": [
											"linux/amd64",
											"linux/386",
											"linux/arm64",
											"linux/arm",
											"darwin/amd64",
											"darwin/arm64",
											"windows/amd64",
											"windows/386",
											"windows/arm64",
											"windows/arm"
										]
									},
									{
										"type": "string"
									}
								],
								"description": "%vscode-docker.tasks.docker-build.dockerBuild.platform%"
							},
							"tag": {
								"type": "string",
								"description": "%vscode-docker.tasks.docker-build.dockerBuild.tag%"
							},
							"target": {
								"type": "string",
								"description": "%vscode-docker.tasks.docker-build.dockerBuild.target%"
							},
							"pull": {
								"type": "boolean",
								"description": "%vscode-docker.tasks.docker-build.dockerBuild.pull%"
							},
							"customOptions": {
								"type": "string",
								"description": "%vscode-docker.tasks.docker-build.dockerBuild.customOptions%"
							}
						},
						"required": [
							"context"
						]
					},
					"platform": {
						"type": "string",
						"description": "%vscode-docker.tasks.docker-build.platform%",
						"enum": [
							"netCore",
							"node",
							"python"
						]
					},
					"netCore": {
						"description": "%vscode-docker.tasks.docker-build.netCore.description%",
						"properties": {
							"appProject": {
								"type": "string",
								"description": "%vscode-docker.tasks.docker-build.netCore.appProject%"
							}
						},
						"required": [
							"appProject"
						]
					},
					"node": {
						"description": "%vscode-docker.tasks.docker-build.node.description%",
						"properties": {
							"package": {
								"type": "string",
								"description": "%vscode-docker.tasks.docker-build.node.package%"
							}
						}
					},
					"python": {
						"description": "%vscode-docker.tasks.docker-build.python.description%",
						"type": "object"
					},
					"options": {
						"description": "%vscode-docker.tasks.options.description%",
						"properties": {
							"cwd": {
								"type": "string",
								"description": "%vscode-docker.tasks.options.cwd.description%"
							},
							"env": {
								"type": "object",
								"description": "%vscode-docker.tasks.options.env.description%",
								"additionalProperties": {
									"type": "string"
								}
							}
						}
					}
				},
				"required": [
					"dockerBuild"
				]
			},
			{
				"type": "docker-run",
				"properties": {
					"dockerRun": {
						"description": "%vscode-docker.tasks.docker-run.dockerRun.description%",
						"properties": {
							"command": {
								"type": "string",
								"description": "%vscode-docker.tasks.docker-run.dockerRun.command%"
							},
							"entrypoint": {
								"type": "string",
								"description": "%vscode-docker.tasks.docker-run.dockerRun.entrypoint%"
							},
							"containerName": {
								"type": "string",
								"description": "%vscode-docker.tasks.docker-run.dockerRun.containerName%"
							},
							"env": {
								"type": "object",
								"description": "%vscode-docker.tasks.docker-run.dockerRun.env%",
								"additionalProperties": {
									"type": "string"
								}
							},
							"envFiles": {
								"type": "array",
								"description": "%vscode-docker.tasks.docker-run.dockerRun.envFiles%",
								"items": {
									"type": "string"
								}
							},
							"image": {
								"type": "string",
								"description": "%vscode-docker.tasks.docker-run.dockerRun.image%"
							},
							"labels": {
								"type": "object",
								"description": "%vscode-docker.tasks.docker-run.dockerRun.labels.description%",
								"properties": {
									"includeDefaults": {
										"type": "boolean",
										"description": "%vscode-docker.tasks.docker-run.dockerRun.labels.includeDefaults%",
										"default": true
									}
								},
								"additionalProperties": {
									"type": "string"
								}
							},
							"network": {
								"type": "string",
								"description": "%vscode-docker.tasks.docker-run.dockerRun.network%"
							},
							"networkAlias": {
								"type": "string",
								"description": "%vscode-docker.tasks.docker-run.dockerRun.networkAlias%"
							},
							"os": {
								"type": "string",
								"description": "%vscode-docker.tasks.docker-run.dockerRun.os%",
								"default": "Linux",
								"enum": [
									"Linux",
									"Windows"
								]
							},
							"ports": {
								"type": "array",
								"description": "%vscode-docker.tasks.docker-run.dockerRun.ports.description%",
								"items": {
									"type": "object",
									"properties": {
										"hostPort": {
											"type": "integer",
											"description": "%vscode-docker.tasks.docker-run.dockerRun.ports.hostPort%"
										},
										"containerPort": {
											"type": "integer",
											"description": "%vscode-docker.tasks.docker-run.dockerRun.ports.containerPort%"
										},
										"protocol": {
											"type": "string",
											"description": "%vscode-docker.tasks.docker-run.dockerRun.ports.protocol%",
											"enum": [
												"tcp",
												"udp"
											]
										}
									},
									"required": [
										"containerPort"
									]
								}
							},
							"portsPublishAll": {
								"type": "boolean",
								"description": "%vscode-docker.tasks.docker-run.dockerRun.portsPublishAll%",
								"default": true
							},
							"extraHosts": {
								"type": "array",
								"description": "%vscode-docker.tasks.docker-run.dockerRun.extraHosts.description%",
								"items": {
									"type": "object",
									"properties": {
										"hostname": {
											"type": "string",
											"description": "%vscode-docker.tasks.docker-run.dockerRun.extraHosts.hostname%"
										},
										"ip": {
											"type": "string",
											"description": "%vscode-docker.tasks.docker-run.dockerRun.extraHosts.ip%"
										}
									},
									"required": [
										"hostname",
										"ip"
									]
								}
							},
							"volumes": {
								"type": "array",
								"description": "%vscode-docker.tasks.docker-run.dockerRun.volumes.description%",
								"items": {
									"type": "object",
									"properties": {
										"localPath": {
											"type": "string",
											"description": "%vscode-docker.tasks.docker-run.dockerRun.volumes.localPath%"
										},
										"containerPath": {
											"type": "string",
											"description": "%vscode-docker.tasks.docker-run.dockerRun.volumes.containerPath%"
										},
										"permissions": {
											"type": "string",
											"description": "%vscode-docker.tasks.docker-run.dockerRun.volumes.permissions%",
											"enum": [
												"rw",
												"ro"
											]
										}
									},
									"required": [
										"localPath",
										"containerPath"
									]
								}
							},
							"remove": {
								"type": "boolean",
								"description": "%vscode-docker.tasks.docker-run.dockerRun.remove%",
								"default": false
							},
							"customOptions": {
								"type": "string",
								"description": "%vscode-docker.tasks.docker-run.dockerRun.customOptions%"
							}
						}
					},
					"platform": {
						"type": "string",
						"description": "%vscode-docker.tasks.docker-run.platform%",
						"enum": [
							"netCore",
							"node",
							"python"
						]
					},
					"netCore": {
						"description": "%vscode-docker.tasks.docker-run.netCore.description%",
						"properties": {
							"appProject": {
								"type": "string",
								"description": "%vscode-docker.tasks.docker-run.netCore.appProject%"
							},
							"enableDebugging": {
								"type": "boolean",
								"description": "%vscode-docker.tasks.docker-run.netCore.enableDebugging%"
							},
							"configureSsl": {
								"type": "boolean",
								"description": "%vscode-docker.tasks.docker-run.netCore.configureSsl%"
							}
						},
						"required": [
							"appProject"
						]
					},
					"node": {
						"description": "%vscode-docker.tasks.docker-run.node.description%",
						"properties": {
							"enableDebugging": {
								"type": "boolean",
								"description": "%vscode-docker.tasks.docker-run.node.enableDebugging%"
							},
							"inspectMode": {
								"type": "string",
								"description": "%vscode-docker.tasks.docker-run.node.inspectMode%"
							},
							"inspectPort": {
								"type": "integer",
								"description": "%vscode-docker.tasks.docker-run.node.inspectPort%"
							},
							"package": {
								"type": "string",
								"description": "%vscode-docker.tasks.docker-run.node.package%"
							}
						}
					},
					"python": {
						"type": "object",
						"additionalProperties": false,
						"description": "%vscode-docker.tasks.docker-run.python.description%",
						"properties": {
							"file": {
								"type": "string",
								"description": "%vscode-docker.tasks.docker-run.python.file%",
								"default": "${file}"
							},
							"module": {
								"type": "string",
								"description": "%vscode-docker.tasks.docker-run.python.module%"
							},
							"args": {
								"type": "array",
								"description": "%vscode-docker.tasks.docker-run.python.args%",
								"items": {
									"type": "string"
								}
							},
							"wait": {
								"type": "boolean",
								"description": "%vscode-docker.tasks.docker-run.python.wait%",
								"default": true
							},
							"debugPort": {
								"type": "number",
								"description": "%vscode-docker.tasks.docker-run.python.debugPort%",
								"default": 5678
							}
						},
						"oneOf": [
							{
								"required": [
									"file"
								]
							},
							{
								"required": [
									"module"
								]
							}
						]
					},
					"options": {
						"description": "%vscode-docker.tasks.options.description%",
						"properties": {
							"cwd": {
								"type": "string",
								"description": "%vscode-docker.tasks.options.cwd.description%"
							},
							"env": {
								"type": "object",
								"description": "%vscode-docker.tasks.options.env.description%",
								"additionalProperties": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			{
				"type": "docker-compose",
				"properties": {
					"dockerCompose": {
						"description": "%vscode-docker.tasks.docker-compose.dockerCompose.description%",
						"properties": {
							"up": {
								"description": "%vscode-docker.tasks.docker-compose.dockerCompose.up.description%",
								"properties": {
									"detached": {
										"type": "boolean",
										"description": "%vscode-docker.tasks.docker-compose.dockerCompose.up.detached%",
										"default": true
									},
									"build": {
										"type": "boolean",
										"description": "%vscode-docker.tasks.docker-compose.dockerCompose.up.build%",
										"default": true
									},
									"scale": {
										"type": "object",
										"description": "%vscode-docker.tasks.docker-compose.dockerCompose.up.scale%",
										"additionalProperties": {
											"type": "number"
										}
									},
									"services": {
										"type": "array",
										"description": "%vscode-docker.tasks.docker-compose.dockerCompose.up.services%",
										"items": {
											"type": "string"
										}
									},
									"profiles": {
										"type": "array",
										"description": "%vscode-docker.tasks.docker-compose.dockerCompose.up.profiles%",
										"items": {
											"type": "string"
										}
									},
									"customOptions": {
										"type": "string",
										"description": "%vscode-docker.tasks.docker-compose.dockerCompose.up.customOptions%"
									}
								},
								"not": {
									"required": [
										"services",
										"profiles"
									]
								}
							},
							"down": {
								"description": "%vscode-docker.tasks.docker-compose.dockerCompose.down.description%",
								"properties": {
									"removeImages": {
										"type": "string",
										"description": "%vscode-docker.tasks.docker-compose.dockerCompose.down.removeImages%",
										"enum": [
											"all",
											"local"
										]
									},
									"removeVolumes": {
										"type": "boolean",
										"description": "%vscode-docker.tasks.docker-compose.dockerCompose.down.removeVolumes%",
										"default": false
									},
									"profiles": {
										"type": "array",
										"description": "%vscode-docker.tasks.docker-compose.dockerCompose.down.profiles%",
										"items": {
											"type": "string"
										}
									},
									"customOptions": {
										"type": "string",
										"description": "%vscode-docker.tasks.docker-compose.dockerCompose.down.customOptions%"
									}
								}
							},
							"envFiles": {
								"type": "array",
								"description": "%vscode-docker.tasks.docker-compose.dockerCompose.envFiles.description%",
								"items": {
									"type": "string"
								}
							},
							"envFile": {
								"type": "string",
								"description": "%vscode-docker.tasks.docker-compose.dockerCompose.envFile.description%"
							},
							"files": {
								"type": "array",
								"description": "%vscode-docker.tasks.docker-compose.dockerCompose.files.description%",
								"items": {
									"type": "string"
								}
							},
							"projectName": {
								"type": "string",
								"description": "%vscode-docker.tasks.docker-compose.dockerCompose.projectName.description%"
							}
						},
						"oneOf": [
							{
								"required": [
									"up"
								]
							},
							{
								"required": [
									"down"
								]
							}
						],
						"default": {
							"up": {
								"detached": true,
								"build": true
							},
							"files": [
								"${workspaceFolder}/docker-compose.yml"
							]
						}
					},
					"options": {
						"description": "%vscode-docker.tasks.options.description%",
						"properties": {
							"cwd": {
								"type": "string",
								"description": "%vscode-docker.tasks.options.cwd.description%"
							},
							"env": {
								"type": "object",
								"description": "%vscode-docker.tasks.options.env.description%",
								"additionalProperties": {
									"type": "string"
								}
							}
						}
					}
				},
				"required": [
					"dockerCompose"
				]
			},
			{
				"type": "dotnet-container-sdk",
				"properties": {
					"netCore": {
						"description": "%vscode-docker.debug.netCore.description%",
						"properties": {
							"appProject": {
								"type": "string",
								"description": "%vscode-docker.debug.netCore.appProject%"
							}
						},
						"required": [
							"appProject"
						]
					},
					"dockerRun": {
						"description": "%vscode-docker.tasks.dotnet-container-sdk.dockerRun.description%",
						"properties": {
							"containerName": {
								"type": "string",
								"description": "%vscode-docker.tasks.dotnet-container-sdk.dockerRun.containerName%"
							}
						},
						"required": [
							"containerName"
						]
					}
				}
			}
		],
		"languages": [
			{
				"id": "dockerfile",
				"aliases": [
					"Dockerfile"
				],
				"filenamePatterns": [
					"*.dockerfile",
					"Dockerfile",
					"Dockerfile.*"
				]
			},
			{
				"id": "ignore",
				"filenames": [
					".dockerignore"
				],
				"filenamePatterns": [
					"*.dockerignore"
				]
			}
		],
		"configurationDefaults": {
			"[dockercompose]": {
				"editor.insertSpaces": true,
				"editor.tabSize": 2,
				"editor.autoIndent": "advanced",
				"editor.quickSuggestions": {
					"other": true,
					"comments": false,
					"strings": true
				}
			}
		},
		"configuration": {
			"title": "Docker",
			"properties": {
				"docker.promptForRegistryWhenPushingImages": {
					"type": "boolean",
					"default": true,
					"description": "%vscode-docker.config.docker.promptForRegistryWhenPushingImages%"
				},
				"docker.commands.build": {
					"oneOf": [
						{
							"type": "array",
							"items": {
								"properties": {
									"template": {
										"type": "string",
										"description": "%vscode-docker.config.template.build.template%"
									},
									"label": {
										"type": "string",
										"description": "%vscode-docker.config.template.build.label%"
									},
									"match": {
										"type": "string",
										"description": "%vscode-docker.config.template.build.match%"
									}
								},
								"required": [
									"label",
									"template"
								]
							}
						},
						{
							"type": "string"
						}
					],
					"default": "${containerCommand} build --pull --rm -f \"${dockerfile}\" -t ${tag} \"${context}\"",
					"description": "%vscode-docker.config.template.build.description%"
				},
				"docker.commands.run": {
					"oneOf": [
						{
							"type": "array",
							"items": {
								"properties": {
									"template": {
										"type": "string",
										"description": "%vscode-docker.config.template.run.template%"
									},
									"label": {
										"type": "string",
										"description": "%vscode-docker.config.template.run.label%"
									},
									"match": {
										"type": "string",
										"description": "%vscode-docker.config.template.run.match%"
									}
								},
								"required": [
									"label",
									"template"
								]
							}
						},
						{
							"type": "string"
						}
					],
					"default": "${containerCommand} run --rm -d ${exposedPorts} ${tag}",
					"description": "%vscode-docker.config.template.run.description%"
				},
				"docker.commands.runInteractive": {
					"oneOf": [
						{
							"type": "array",
							"items": {
								"properties": {
									"template": {
										"type": "string",
										"description": "%vscode-docker.config.template.runInteractive.template%"
									},
									"label": {
										"type": "string",
										"description": "%vscode-docker.config.template.runInteractive.label%"
									},
									"match": {
										"type": "string",
										"description": "%vscode-docker.config.template.runInteractive.match%"
									}
								},
								"required": [
									"label",
									"template"
								]
							}
						},
						{
							"type": "string"
						}
					],
					"default": "${containerCommand} run --rm -it ${exposedPorts} ${tag}",
					"description": "%vscode-docker.config.template.runInteractive.description%"
				},
				"docker.commands.attach": {
					"oneOf": [
						{
							"type": "array",
							"items": {
								"properties": {
									"template": {
										"type": "string",
										"description": "%vscode-docker.config.template.attach.template%"
									},
									"label": {
										"type": "string",
										"description": "%vscode-docker.config.template.attach.label%"
									},
									"match": {
										"type": "string",
										"description": "%vscode-docker.config.template.attach.match%"
									}
								},
								"required": [
									"label",
									"template"
								]
							}
						},
						{
							"type": "string"
						}
					],
					"default": "${containerCommand} exec -it ${containerId} ${shellCommand}",
					"description": "%vscode-docker.config.template.attach.description%"
				},
				"docker.commands.logs": {
					"oneOf": [
						{
							"type": "array",
							"items": {
								"properties": {
									"template": {
										"type": "string",
										"description": "%vscode-docker.config.template.logs.template%"
									},
									"label": {
										"type": "string",
										"description": "%vscode-docker.config.template.logs.label%"
									},
									"match": {
										"type": "string",
										"description": "%vscode-docker.config.template.logs.match%"
									}
								},
								"required": [
									"label",
									"template"
								]
							}
						},
						{
							"type": "string"
						}
					],
					"default": "${containerCommand} logs --tail 1000 -f ${containerId}",
					"description": "%vscode-docker.config.template.logs.description%"
				},
				"docker.commands.composeUp": {
					"oneOf": [
						{
							"type": "array",
							"items": {
								"properties": {
									"template": {
										"type": "string",
										"description": "%vscode-docker.config.template.composeUp.template%"
									},
									"label": {
										"type": "string",
										"description": "%vscode-docker.config.template.composeUp.label%"
									},
									"match": {
										"type": "string",
										"description": "%vscode-docker.config.template.composeUp.match%"
									}
								},
								"required": [
									"label",
									"template"
								]
							}
						},
						{
							"type": "string"
						}
					],
					"default": [
						{
							"label": "Compose Up",
							"template": "${composeCommand} ${configurationFile} up ${detached} ${build}"
						}
					],
					"description": "%vscode-docker.config.template.composeUp.description%"
				},
				"docker.commands.composeUpSubset": {
					"oneOf": [
						{
							"type": "array",
							"items": {
								"properties": {
									"template": {
										"type": "string",
										"description": "%vscode-docker.config.template.composeUpSubset.template%"
									},
									"label": {
										"type": "string",
										"description": "%vscode-docker.config.template.composeUpSubset.label%"
									},
									"match": {
										"type": "string",
										"description": "%vscode-docker.config.template.composeUpSubset.match%"
									}
								},
								"required": [
									"label",
									"template"
								]
							}
						},
						{
							"type": "string"
						}
					],
					"default": [
						{
							"label": "Compose Up",
							"template": "${composeCommand} ${profileList} ${configurationFile} up ${detached} ${build} ${serviceList}"
						}
					],
					"description": "%vscode-docker.config.template.composeUpSubset.description%"
				},
				"docker.commands.composeDown": {
					"oneOf": [
						{
							"type": "array",
							"items": {
								"properties": {
									"template": {
										"type": "string",
										"description": "%vscode-docker.config.template.composeDown.template%"
									},
									"label": {
										"type": "string",
										"description": "%vscode-docker.config.template.composeDown.label%"
									},
									"match": {
										"type": "string",
										"description": "%vscode-docker.config.template.composeDown.match%"
									}
								},
								"required": [Visual Studio Code Extension for Docker
Copyright (c) Microsoft Corporation
All rights reserved.
MIT License
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED AS IS, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
									"label",
									"template"
								]
							}
						},
						{
							"type": "string"
						}
					],
					"default": [
						{
							"label": "Compose Down",
							"template": "${composeCommand} ${configurationFile} down"
						}
					],
					"description": "%vscode-docker.config.template.composeDown.description%"
				},
				"docker.containers.groupBy": {
					"type": "string",
					"default": "Compose Project Name",
					"description": "%vscode-docker.config.docker.containers.groupBy%",
					"enum": [
						"Compose Project Name",
						"ContainerId",
						"ContainerName",
						"CreatedTime",
						"FullTag",
						"Image",
						"Networks",
						"None",
						"Ports",
						"Registry",
						"RegistryAndPath",
						"Repository",
						"RepositoryName",
						"RepositoryNameShort",
						"RepositoryNameAndTag",
						"State",
						"Status",
						"Tag",
						"Label"
					]
				},
				"docker.containers.groupByLabel": {
					"type": "string",
					"description": "%vscode-docker.config.docker.containers.groupByLabel%"
				},
				"docker.containers.description": {
					"type": "array",
					"default": [
						"ContainerName",
						"Status"
					],
					"description": "%vscode-docker.config.docker.containers.description%",
					"items": {
						"type": "string",
						"enum": [
							"Compose Project Name",
							"ContainerId",
							"ContainerName",
							"CreatedTime",
							"FullTag",
							"Image",
							"Networks",
							"Ports",
							"Registry",
							"RegistryAndPath",
							"Repository",
							"RepositoryName",
							"RepositoryNameShort",
							"RepositoryNameAndTag",
							"State",
							"Status",
							"Tag"
						]
					}
				},
				"docker.containers.label": {
					"type": "string",
					"default": "FullTag",
					"description": "%vscode-docker.config.docker.containers.label%",
					"enum": [
						"Compose Project Name",
						"ContainerId",
						"ContainerName",
						"CreatedTime",
						"FullTag",
						"Image",
						"Networks",
						"Ports",
						"Registry",
						"RegistryAndPath",
						"Repository",
						"RepositoryName",
						"RepositoryNameShort",
						"RepositoryNameAndTag",
						"State",
						"Status",
						"Tag"
					]
				},
				"docker.containers.sortBy": {
					"type": "string",
					"default": "CreatedTime",
					"description": "%vscode-docker.config.docker.containers.sortBy%",
					"enum": [
						"CreatedTime",
						"Label"
					]
				},
				"docker.contexts.description": {
					"type": "array",
					"default": [
						"Description"
					],
					"description": "%vscode-docker.config.docker.contexts.description%",
					"items": {
						"type": "string",
						"enum": [
							"Name",
							"Description",
							"DockerEndpoint"
						]
					}
				},
				"docker.contexts.label": {
					"type": "string",
					"default": "Name",
					"description": "%vscode-docker.config.docker.contexts.label%",
					"enum": [
						"Name",
						"Description",
						"DockerEndpoint"
					]
				},
				"docker.contexts.showInStatusBar": {
					"type": "boolean",
					"default": false,
					"description": "%vscode-docker.config.docker.contexts.showInStatusBar%"
				},
				"docker.images.groupBy": {
					"type": "string",
					"default": "Repository",
					"description": "%vscode-docker.config.docker.images.groupBy%",
					"enum": [
						"CreatedTime",
						"FullTag",
						"ImageId",
						"None",
						"Registry",
						"RegistryAndPath",
						"Repository",
						"RepositoryName",
						"RepositoryNameShort",
						"RepositoryNameAndTag",
						"Tag"
					]
				},
				"docker.images.description": {
					"type": "array",
					"default": [
						"CreatedTime"
					],
					"description": "%vscode-docker.config.docker.images.description%",
					"items": {
						"type": "string",
						"enum": [
							"CreatedTime",
							"FullTag",
							"ImageId",
							"Registry",
							"RegistryAndPath",
							"Repository",
							"RepositoryName",
							"RepositoryNameShort",
							"RepositoryNameAndTag",
							"Tag",
							"Size"
						]
					}
				},
				"docker.images.label": {
					"type": "string",
					"default": "Tag",
					"description": "%vscode-docker.config.docker.images.label%",
					"enum": [
						"CreatedTime",
						"FullTag",
						"ImageId",
						"Registry",
						"RegistryAndPath",
						"Repository",
						"RepositoryName",
						"RepositoryNameShort",
						"RepositoryNameAndTag",
						"Tag",
						"Size"
					]
				},
				"docker.images.sortBy": {
					"type": "string",
					"default": "CreatedTime",
					"description": "%vscode-docker.config.docker.images.sortBy%",
					"enum": [
						"CreatedTime",
						"Label",
						"Size"
					]
				},
				"docker.images.checkForOutdatedImages": {
					"type": "boolean",
					"default": true,
					"description": "%vscode-docker.config.docker.images.checkForOutdatedImages%"
				},
				"docker.networks.groupBy": {
					"type": "string",
					"default": "None",
					"description": "%vscode-docker.config.docker.networks.groupBy%",
					"enum": [
						"CreatedTime",
						"NetworkDriver",
						"NetworkId",
						"NetworkName",
						"None"
					]
				},
				"docker.networks.description": {
					"type": "array",
					"default": [
						"NetworkDriver",
						"CreatedTime"
					],
					"description": "%vscode-docker.config.docker.networks.description%",
					"items": {
						"type": "string",
						"enum": [
							"CreatedTime",
							"NetworkDriver",
							"NetworkId",
							"NetworkName"
						]
					}
				},
				"docker.networks.showBuiltInNetworks": {
					"type": "boolean",
					"default": true,
					"description": "%vscode-docker.config.docker.networks.showBuiltIn%"
				},
				"docker.networks.label": {
					"type": "string",
					"default": "NetworkName",
					"description": "%vscode-docker.config.docker.networks.label%",
					"enum": [
						"CreatedTime",
						"NetworkDriver",
						"NetworkId",
						"NetworkName"
					]
				},
				"docker.networks.sortBy": {
					"type": "string",
					"default": "CreatedTime",
					"description": "%vscode-docker.config.docker.networks.sortBy%",
					"enum": [
						"CreatedTime",
						"Label"
					]
				},
				"docker.volumes.groupBy": {
					"type": "string",
					"default": "None",
					"description": "%vscode-docker.config.docker.volumes.groupBy%",
					"enum": [
						"CreatedTime",
						"VolumeName",
						"None"
					]
				},
				"docker.volumes.description": {
					"type": "array",
					"default": [
						"CreatedTime"
					],
					"description": "%vscode-docker.config.docker.volumes.description%",
					"items": {
						"type": "string",
						"enum": [
							"CreatedTime",
							"VolumeName"
						]
					}
				},
				"docker.volumes.label": {
					"type": "string",
					"default": "VolumeName",
					"description": "%vscode-docker.config.docker.volumes.label%",
					"enum": [
						"CreatedTime",
						"VolumeName"
					]
				},
				"docker.volumes.sortBy": {
					"type": "string",
					"default": "CreatedTime",
					"description": "%vscode-docker.config.docker.volumes.sortBy%",
					"enum": [
						"CreatedTime",
						"Label"
					]
				},
				"docker.imageBuildContextPath": {
					"type": "string",
					"default": "",
					"description": "%vscode-docker.config.docker.imageBuildContextPath%",
					"scope": "machine-overridable"
				},
				"docker.truncateLongRegistryPaths": {
					"type": "boolean",
					"default": false,
					"description": "%vscode-docker.config.docker.truncateLongRegistryPaths%"
				},
				"docker.truncateMaxLength": {
					"type": "number",
					"default": 10,
					"description": "%vscode-docker.config.docker.truncateMaxLength%"
				},
				"docker.environment": {
					"type": "object",
					"additionalProperties": {
						"type": "string"
					},
					"description": "%vscode-docker.config.docker.environment%",
					"scope": "machine-overridable"
				},
				"docker.languageserver.diagnostics.deprecatedMaintainer": {
					"scope": "resource",
					"type": "string",
					"default": "warning",
					"enum": [
						"ignore",
						"warning",
						"error"
					],
					"description": "%vscode-docker.config.docker.languageserver.diagnostics.deprecatedMaintainer%"
				},
				"docker.languageserver.diagnostics.emptyContinuationLine": {
					"scope": "resource",
					"type": "string",
					"default": "warning",
					"enum": [
						"ignore",
						"warning",
						"error"
					],
					"description": "%vscode-docker.config.docker.languageserver.diagnostics.emptyContinuationLine%"
				},
				"docker.languageserver.diagnostics.directiveCasing": {
					"scope": "resource",
					"type": "string",
					"default": "warning",
					"enum": [
						"ignore",
						"warning",
						"error"
					],
					"description": "%vscode-docker.config.docker.languageserver.diagnostics.directiveCasing%"
				},
				"docker.languageserver.diagnostics.instructionCasing": {
					"scope": "resource",
					"type": "string",
					"default": "warning",
					"enum": [
						"ignore",
						"warning",
						"error"
					],
					"description": "%vscode-docker.config.docker.languageserver.diagnostics.instructionCasing%"
				},
				"docker.languageserver.diagnostics.instructionCmdMultiple": {
					"scope": "resource",
					"type": "string",
					"default": "warning",
					"enum": [
						"ignore",
						"warning",
						"error"
					],
					"description": "%vscode-docker.config.docker.languageserver.diagnostics.instructionCmdMultiple%"
				},
				"docker.languageserver.diagnostics.instructionEntrypointMultiple": {
					"scope": "resource",
					"type": "string",
					"default": "warning",
					"enum": [
						"ignore",
						"warning",
						"error"
					],
					"description": "%vscode-docker.config.docker.languageserver.diagnostics.instructionEntrypointMultiple%"
				},
				"docker.languageserver.diagnostics.instructionHealthcheckMultiple": {
					"scope": "resource",
					"type": "string",
					"default": "warning",
					"enum": [
						"ignore",
						"warning",
						"error"
					],
					"description": "%vscode-docker.config.docker.languageserver.diagnostics.instructionHealthcheckMultiple%"
				},
				"docker.languageserver.diagnostics.instructionJSONInSingleQuotes": {
					"scope": "resource",
					"type": "string",
					"default": "warning",
					"enum": [
						"ignore",
						"warning",
						"error"
					],
					"description": "%vscode-docker.config.docker.languageserver.diagnostics.instructionJsonInSingleQuotes%"
				},
				"docker.languageserver.diagnostics.instructionWorkdirRelative": {
					"scope": "resource",
					"type": "string",
					"default": "warning",
					"enum": [
						"ignore",
						"warning",
						"error"
					],
					"description": "%vscode-docker.config.docker.languageserver.diagnostics.instructionWorkdirRelative%"
				},
				"docker.languageserver.formatter.ignoreMultilineInstructions": {
					"scope": "resource",
					"type": "boolean",
					"default": false,
					"description": "%vscode-docker.config.docker.languageserver.formatter.ignoreMultilineInstructions%"
				},
				"docker.dockerComposeBuild": {
					"type": "boolean",
					"default": true,
					"description": "%vscode-docker.config.docker.dockerComposeBuild%"
				},
				"docker.dockerComposeDetached": {
					"type": "boolean",
					"default": true,
					"description": "%vscode-docker.config.docker.dockerComposeDetached%"
				},
				"docker.showRemoteWorkspaceWarning": {
					"type": "boolean",
					"default": true,
					"description": "%vscode-docker.config.docker.showRemoteWorkspaceWarning%"
				},
				"docker.scaffolding.templatePath": {
					"type": "string",
					"description": "%vscode-docker.config.docker.scaffolding.templatePath%"
				},
				"docker.dockerPath": {
					"type": "string",
					"description": "%vscode-docker.config.docker.dockerPath%",
					"scope": "machine-overridable"
				},
				"docker.composeCommand": {
					"type": "string",
					"description": "%vscode-docker.config.docker.composeCommand%",
					"scope": "machine-overridable"
				},
				"docker.enableDockerComposeLanguageService": {
					"type": "boolean",
					"default": true,
					"description": "%vscode-docker.config.docker.enableDockerComposeLanguageService%"
				}
			}
		},
		"commands": [
			{
				"command": "vscode-docker.compose.down",
				"title": "%vscode-docker.commands.compose.down%",
				"category": "%vscode-docker.commands.category.docker%"
			},
			{
				"command": "vscode-docker.compose.restart",
				"title": "%vscode-docker.commands.compose.restart%",
				"category": "%vscode-docker.commands.category.docker%"
			},
			{
				"command": "vscode-docker.compose.up",
				"title": "%vscode-docker.commands.compose.up%",
				"category": "%vscode-docker.commands.category.docker%"
			},
			{
				"command": "vscode-docker.compose.up.subset",
				"title": "%vscode-docker.commands.compose.up.subset%",
				"category": "%vscode-docker.commands.category.docker%"
			},
			{
				"command": "vscode-docker.configure",
				"title": "%vscode-docker.commands.configure%",
				"category": "%vscode-docker.commands.category.docker%"
			},
			{
				"command": "vscode-docker.configureCompose",
				"title": "%vscode-docker.commands.configureCompose%",
				"category": "%vscode-docker.commands.category.docker%"
			},
			{
				"command": "vscode-docker.openDockerDownloadPage",
				"title": "%vscode-docker.commands.openDockerDownloadPage%",
				"category": "%vscode-docker.commands.category.docker%"
			},
			{
				"command": "vscode-docker.containers.attachShell",
				"title": "%vscode-docker.commands.containers.attachShell%",
				"category": "%vscode-docker.commands.category.dockerContainers%"
			},
			{
				"command": "vscode-docker.containers.browse",
				"title": "%vscode-docker.commands.containers.browse%",
				"category": "%vscode-docker.commands.category.dockerContainers%"
			},
			{
				"command": "vscode-docker.containers.configureExplorer",
				"title": "%vscode-docker.commands.containers.configureExplorer%",
				"category": "%vscode-docker.commands.category.dockerContainers%",
				"icon": "$(settings-gear)"
			},
			{
				"command": "vscode-docker.containers.downloadFile",
				"title": "%vscode-docker.commands.containers.downloadFile%",
				"category": "%vscode-docker.commands.category.dockerContainers%",
				"icon": "$(desktop-download)"
			},
			{
				"command": "vscode-docker.containers.inspect",
				"title": "%vscode-docker.commands.containers.inspect%",
				"category": "%vscode-docker.commands.category.dockerContainers%"
			},
			{
				"command": "vscode-docker.containers.openFile",
				"title": "%vscode-docker.commands.containers.openFile%",
				"category": "%vscode-docker.commands.category.dockerContainers%",
				"icon": "$(go-to-file)"
			},
			{
				"command": "vscode-docker.containers.prune",
				"title": "%vscode-docker.commands.containers.prune%",
				"category": "%vscode-docker.commands.category.dockerContainers%",
				"icon": "$(clear-all)"
			},
			{
				"command": "vscode-docker.containers.refresh",
				"title": "%vscode-docker.commands.containers.refresh%",
				"category": "%vscode-docker.commands.category.dockerContainers%",
				"icon": "$(refresh)"
			},
			{
				"command": "vscode-docker.containers.remove",
				"title": "%vscode-docker.commands.containers.remove%",
				"category": "%vscode-docker.commands.category.dockerContainers%"
			},
			{
				"command": "vscode-docker.containers.group.remove",
				"title": "%vscode-docker.commands.containers.group.remove%",
				"category": "%vscode-docker.commands.category.dockerContainers%"
			},
			{
				"command": "vscode-docker.containers.restart",
				"title": "%vscode-docker.commands.containers.restart%",
				"category": "%vscode-docker.commands.category.dockerContainers%"
			},
			{
				"command": "vscode-docker.containers.select",
				"title": "%vscode-docker.commands.containers.select%",
				"category": "%vscode-docker.commands.category.dockerContainers%"
			},
			{
				"command": "vscode-docker.containers.start",
				"title": "%vscode-docker.commands.containers.start%",
				"category": "%vscode-docker.commands.category.dockerContainers%"
			},
			{
				"command": "vscode-docker.containers.stop",
				"title": "%vscode-docker.commands.containers.stop%",
				"category": "%vscode-docker.commands.category.dockerContainers%"
			},
			{
				"command": "vscode-docker.containers.stats",
				"title": "%vscode-docker.commands.containers.stats%",
				"category": "%vscode-docker.commands.category.docker%"
			},
			{
				"command": "vscode-docker.containers.viewLogs",
				"title": "%vscode-docker.commands.containers.viewLogs%",
				"category": "%vscode-docker.commands.category.dockerContainers%"
			},
			{
				"command": "vscode-docker.containers.composeGroup.logs",
				"title": "%vscode-docker.commands.containers.composeGroup.logs%",
				"category": "%vscode-docker.commands.category.dockerContainers%"
			},
			{
				"command": "vscode-docker.containers.composeGroup.start",
				"title": "%vscode-docker.commands.containers.composeGroup.start%",
				"category": "%vscode-docker.commands.category.dockerContainers%"
			},
			{
				"command": "vscode-docker.containers.composeGroup.stop",
				"title": "%vscode-docker.commands.containers.composeGroup.stop%",
				"category": "%vscode-docker.commands.category.dockerContainers%"
			},
			{
				"command": "vscode-docker.containers.composeGroup.restart",
				"title": "%vscode-docker.commands.containers.composeGroup.restart%",
				"category": "%vscode-docker.commands.category.dockerContainers%"
			},
			{
				"command": "vscode-docker.containers.composeGroup.down",
				"title": "%vscode-docker.commands.containers.composeGroup.down%",
				"category": "%vscode-docker.commands.category.dockerContainers%"
			},
			{
				"command": "vscode-docker.debugging.initializeForDebugging",
				"title": "%vscode-docker.commands.debugging.initializeForDebugging%",
				"category": "%vscode-docker.commands.category.docker%"
			},
			{
				"command": "vscode-docker.images.build",
				"title": "%vscode-docker.commands.images.build%",
				"category": "%vscode-docker.commands.category.dockerImages%"
			},
			{
				"command": "vscode-docker.images.configureExplorer",
				"title": "%vscode-docker.commands.images.configureExplorer%",
				"category": "%vscode-docker.commands.category.dockerImages%",
				"icon": "$(settings-gear)"
			},
			{
				"command": "vscode-docker.images.inspect",
				"title": "%vscode-docker.commands.images.inspect%",
				"category": "%vscode-docker.commands.category.dockerImages%"
			},
			{
				"command": "vscode-docker.images.prune",
				"title": "%vscode-docker.commands.images.prune%",
				"category": "%vscode-docker.commands.category.dockerImages%",
				"icon": "$(clear-all)"
			},
			{
				"command": "vscode-docker.images.showDangling",
				"title": "%vscode-docker.commands.images.showDangling%",
				"category": "%vscode-docker.commands.category.dockerImages%",
				"icon": "$(eye)"
			},
			{
				"command": "vscode-docker.images.hideDangling",
				"title": "%vscode-docker.commands.images.hideDangling%",
				"category": "%vscode-docker.commands.category.dockerImages%",
				"icon": "$(eye-closed)"
			},
			{
				"command": "vscode-docker.images.pull",
				"title": "%vscode-docker.commands.images.pull%",
				"category": "%vscode-docker.commands.category.dockerImages%"
			},
			{
				"command": "vscode-docker.images.push",
				"title": "%vscode-docker.commands.images.push%",
				"category": "%vscode-docker.commands.category.dockerImages%"
			},
			{
				"command": "vscode-docker.images.refresh",
				"title": "%vscode-docker.commands.images.refresh%",
				"category": "%vscode-docker.commands.category.dockerImages%",
				"icon": "$(refresh)"
			},
			{
				"command": "vscode-docker.images.remove",
				"title": "%vscode-docker.commands.images.remove%",
				"category": "%vscode-docker.commands.category.dockerImages%"
			},
			{
				"command": "vscode-docker.images.group.remove",
				"title": "%vscode-docker.commands.images.group.remove%",
				"category": "%vscode-docker.commands.category.dockerImages%"
			},
			{
				"command": "vscode-docker.images.run",
				"title": "%vscode-docker.commands.images.run%",
				"category": "%vscode-docker.commands.category.dockerImages%"
			},
			{
				"command": "vscode-docker.images.runAzureCli",
				"title": "%vscode-docker.commands.images.runAzureCli%",
				"category": "%vscode-docker.commands.category.dockerImages%"
			},
			{
				"command": "vscode-docker.images.runInteractive",
				"title": "%vscode-docker.commands.images.runInteractive%",
				"category": "%vscode-docker.commands.category.dockerImages%"
			},
			{
				"command": "vscode-docker.images.tag",
				"title": "%vscode-docker.commands.images.tag%",
				"category": "%vscode-docker.commands.category.dockerImages%"
			},
			{
				"command": "vscode-docker.images.copyFullTag",
				"title": "%vscode-docker.commands.images.copyFullTag%",
				"category": "%vscode-docker.commands.category.dockerImages%"
			},
			{
				"command": "vscode-docker.networks.configureExplorer",
				"title": "%vscode-docker.commands.networks.configureExplorer%",
				"category": "%vscode-docker.commands.category.dockerNetworks%",
				"icon": "$(settings-gear)"
			},
			{
				"command": "vscode-docker.networks.create",
				"title": "%vscode-docker.commands.networks.create%",
				"category": "%vscode-docker.commands.category.dockerNetworks%",
				"icon": "$(add)"
			},
			{
				"command": "vscode-docker.networks.inspect",
				"title": "%vscode-docker.commands.networks.inspect%",
				"category": "%vscode-docker.commands.category.dockerNetworks%"
			},
			{
				"command": "vscode-docker.networks.prune",
				"title": "%vscode-docker.commands.networks.prune%",
				"category": "%vscode-docker.commands.category.dockerNetworks%",
				"icon": "$(clear-all)"
			},
			{
				"command": "vscode-docker.networks.refresh",
				"title": "%vscode-docker.commands.networks.refresh%",
				"category": "%vscode-docker.commands.category.dockerNetworks%",
				"icon": "$(refresh)"
			},
			{
				"command": "vscode-docker.networks.remove",
				"title": "%vscode-docker.commands.networks.remove%",
				"category": "%vscode-docker.commands.category.dockerNetworks%"
			},
			{
				"command": "vscode-docker.pruneSystem",
				"title": "%vscode-docker.commands.pruneSystem%",
				"category": "%vscode-docker.commands.category.docker%"
			},
			{
				"command": "vscode-docker.registries.azure.buildImage",
				"title": "%vscode-docker.commands.registries.azure.buildImage%",
				"category": "%vscode-docker.commands.category.azureContainerRegistry%"
			},
			{
				"command": "vscode-docker.registries.azure.createRegistry",
				"title": "%vscode-docker.commands.registries.azure.createRegistry%",
				"category": "%vscode-docker.commands.category.azureContainerRegistry%"
			},
			{
				"command": "vscode-docker.registries.azure.deleteRegistry",
				"title": "%vscode-docker.commands.registries.azure.deleteRegistry%",
				"category": "%vscode-docker.commands.category.azureContainerRegistry%"
			},
			{
				"command": "vscode-docker.registries.azure.deleteRepository",
				"title": "%vscode-docker.commands.registries.azure.deleteRepository%",
				"category": "%vscode-docker.commands.category.azureContainerRegistry%"
			},
			{
				"command": "vscode-docker.registries.azure.openInPortal",
				"title": "%vscode-docker.commands.registries.azure.openInPortal%",
				"category": "%vscode-docker.commands.category.azureContainerRegistry%"
			},
			{
				"command": "vscode-docker.registries.azure.untagImage",
				"title": "%vscode-docker.commands.registries.azure.untagImage%",
				"category": "%vscode-docker.commands.category.azureContainerRegistry%"
			},
			{
				"command": "vscode-docker.registries.azure.viewProperties",
				"title": "%vscode-docker.commands.registries.azure.viewProperties%",
				"category": "%vscode-docker.commands.category.azureContainerRegistry%"
			},
			{
				"command": "vscode-docker.registries.connectRegistry",
				"title": "%vscode-docker.commands.registries.connect%",
				"category": "%vscode-docker.commands.category.dockerRegistries%",
				"icon": "$(plug)"
			},
			{
				"command": "vscode-docker.registries.copyImageDigest",
				"title": "%vscode-docker.commands.registries.copyImageDigest%",
				"category": "%vscode-docker.commands.category.dockerRegistries%"
			},
			{
				"command": "vscode-docker.registries.inspectRemoteImageManifest",
				"title": "%vscode-docker.commands.registries.inspectRemoteImageManifest%",
				"category": "%vscode-docker.commands.category.dockerRegistries%"
			},
			{
				"command": "vscode-docker.registries.copyRemoteFullTag",
				"title": "%vscode-docker.commands.registries.copyRemoteFullTag%",
				"category": "%vscode-docker.commands.category.dockerRegistries%"
			},
			{
				"command": "vscode-docker.registries.deleteImage",
				"title": "%vscode-docker.commands.registries.deleteImage%",
				"category": "%vscode-docker.commands.category.dockerRegistries%"
			},
			{
				"command": "vscode-docker.registries.deployImageToAzure",
				"title": "%vscode-docker.commands.registries.deployImageToAzure%",
				"category": "%vscode-docker.commands.category.dockerRegistries%"
			},
			{
				"command": "vscode-docker.registries.deployImageToAca",
				"title": "%vscode-docker.commands.registries.deployImageToAca%",
				"category": "%vscode-docker.commands.category.dockerRegistries%"
			},
			{
				"command": "vscode-docker.registries.disconnectRegistry",
				"title": "%vscode-docker.commands.registries.disconnectRegistry%",
				"category": "%vscode-docker.commands.category.dockerRegistries%"
			},
			{
				"command": "vscode-docker.registries.genericV2.removeTrackedRegistry",
				"title": "%vscode-docker.commands.registries.genericV2.removeTrackedRegistry%",
				"category": "%vscode-docker.commands.category.dockerRegistries%"
			},
			{
				"command": "vscode-docker.registries.genericV2.addTrackedRegistry",
				"title": "%vscode-docker.commands.registries.genericV2.addTrackedRegistry%",
				"category": "%vscode-docker.commands.category.dockerRegistries%"
			},
			{
				"command": "vscode-docker.registries.dockerHub.openInBrowser",
				"title": "%vscode-docker.commands.registries.dockerHub.openInBrowser%",
				"category": "%vscode-docker.commands.category.dockerHub%"
			},
			{
				"command": "vscode-docker.registries.help",
				"title": "%vscode-docker.commands.registries.help%",
				"category": "%vscode-docker.commands.category.dockerRegistries%",
				"icon": "$(question)"
			},
			{
				"command": "vscode-docker.registries.logInToDockerCli",
				"title": "%vscode-docker.commands.registries.logInToDockerCli%",
				"category": "%vscode-docker.commands.category.dockerRegistries%"
			},
			{
				"command": "vscode-docker.registries.logOutOfDockerCli",
				"title": "%vscode-docker.commands.registries.logOutOfDockerCli%",
				"category": "%vscode-docker.commands.category.dockerRegistries%"
			},
			{
				"command": "vscode-docker.registries.pullImage",
				"title": "%vscode-docker.commands.registries.pullImage%",
				"category": "%vscode-docker.commands.category.dockerRegistries%"
			},
			{
				"command": "vscode-docker.registries.pullRepository",
				"title": "%vscode-docker.commands.registries.pullRepository%",
				"category": "%vscode-docker.commands.category.dockerRegistries%"
			},
			{
				"command": "vscode-docker.registries.reconnectRegistry",
				"title": "%vscode-docker.commands.registries.reconnectRegistry%",
				"category": "%vscode-docker.commands.category.dockerRegistries%"
			},
			{
				"command": "vscode-docker.registries.refresh",
				"title": "%vscode-docker.commands.registries.refresh%",
				"category": "%vscode-docker.commands.category.dockerRegistries%",
				"icon": "$(refresh)"
			},
			{
				"command": "vscode-docker.volumes.configureExplorer",
				"title": "%vscode-docker.commands.volumes.configureExplorer%",
				"category": "%vscode-docker.commands.category.dockerVolumes%",
				"icon": "$(settings-gear)"
			},
			{
				"command": "vscode-docker.volumes.inspect",
				"title": "%vscode-docker.commands.volumes.inspect%",
				"category": "%vscode-docker.commands.category.dockerVolumes%"
			},
			{
				"command": "vscode-docker.volumes.prune",
				"title": "%vscode-docker.commands.volumes.prune%",
				"category": "%vscode-docker.commands.category.dockerVolumes%",
				"icon": "$(clear-all)"
			},
			{
				"command": "vscode-docker.volumes.refresh",
				"title": "%vscode-docker.commands.volumes.refresh%",
				"category": "%vscode-docker.commands.category.dockerVolumes%",
				"icon": "$(refresh)"
			},
			{
				"command": "vscode-docker.volumes.remove",
				"title": "%vscode-docker.commands.volumes.remove%",
				"category": "%vscode-docker.commands.category.dockerVolumes%"
			},
			{
				"command": "vscode-docker.help",
				"title": "%vscode-docker.commands.help%",
				"category": "%vscode-docker.commands.category.docker%",
				"icon": "$(question)"
			},
			{
				"command": "vscode-docker.help.reportIssue",
				"title": "%vscode-docker.commands.help.reportIssue%",
				"category": "%vscode-docker.commands.category.docker%"
			},
			{
				"command": "vscode-docker.help.openWalkthrough",
				"title": "%vscode-docker.commands.help.openWalkthrough%",
				"category": "%vscode-docker.commands.category.docker%"
			},
			{
				"command": "vscode-docker.contexts.use",
				"title": "%vscode-docker.commands.contexts.use%",
				"category": "%vscode-docker.commands.category.contexts%",
				"icon": "$(check)"
			},
			{
				"command": "vscode-docker.contexts.remove",
				"title": "%vscode-docker.commands.contexts.remove%",
				"category": "%vscode-docker.commands.category.contexts%"
			},
			{
				"command": "vscode-docker.contexts.inspect",
				"title": "%vscode-docker.commands.contexts.inspect%",
				"category": "%vscode-docker.commands.category.contexts%"
			},
			{
				"command": "vscode-docker.contexts.configureExplorer",
				"title": "%vscode-docker.commands.contexts.configureExplorer%",
				"category": "%vscode-docker.commands.category.contexts%",
				"icon": "$(settings-gear)"
			},
			{
				"command": "vscode-docker.contexts.refresh",
				"title": "%vscode-docker.commands.contexts.refresh%",
				"category": "%vscode-docker.commands.category.contexts%",
				"icon": "$(refresh)"
			},
			{
				"command": "vscode-docker.contexts.help",
				"title": "%vscode-docker.commands.contexts.help%",
				"category": "%vscode-docker.commands.category.contexts%",
				"icon": "$(question)"
			},
			{
				"command": "vscode-docker.activateRegistryProviders",
				"title": "%vscode-docker.commands.activateRegistryProviders%",
				"category": "%vscode-docker.commands.category.docker%"
			}
		],
		"views": {
			"dockerView": [
				{
					"id": "dockerContainers",
					"name": "%vscode-docker.views.dockerContainers%"
				},
				{
					"id": "dockerImages",
					"name": "%vscode-docker.views.dockerImages%"
				},
				{
					"id": "dockerRegistries",
					"name": "%vscode-docker.views.dockerRegistries%"
				},
				{
					"id": "dockerNetworks",
					"name": "%vscode-docker.views.dockerNetworks%",
					"visibility": "collapsed"
				},
				{
					"id": "dockerVolumes",
					"name": "%vscode-docker.views.dockerVolumes%",
					"visibility": "collapsed"
				},
				{
					"id": "vscode-docker.views.dockerContexts",
					"name": "%vscode-docker.views.dockerContexts%",
					"visibility": "collapsed"
				},
				{
					"id": "vscode-docker.views.help",
					"name": "%vscode-docker.views.help%"
				}
			]
		},
		"viewsContainers": {
			"activitybar": [
				{
					"icon": "resources/docker.svg",
					"id": "dockerView",
					"title": "%vscode-docker.views.activityBar%"
				}
			]
		},
		"walkthroughs": [
			{
				"id": "dockerStart",
				"title": "%vscode-docker.walkthrough.dockerStart.title%",
				"featuredFor": [
					"Dockerfile",
					"docker-compose.yml",
					"docker-compose.yaml"
				],
				"description": "%vscode-docker.walkthrough.dockerStart.description%",
				"steps": [
					{
						"id": "openFolder",
						"title": "%vscode-docker.walkthrough.dockerStart.openFolder.title%",
						"completionEvents": [
							"onCommand:workbench.action.files.openFolder"
						],
						"when": "workspaceFolderCount == 0 && !isMac",
						"description": "%vscode-docker.walkthrough.dockerStart.openFolder.description%",
						"media": {
							"markdown": "resources/walkthroughs/empty.md"
						}
					},
					{
						"id": "openFolderMac",
						"title": "%vscode-docker.walkthrough.dockerStart.openFolder.title%",
						"completionEvents": [
							"onCommand:workbench.action.files.openFileFolder"
						],
						"when": "workspaceFolderCount == 0 && isMac",
						"description": "%vscode-docker.walkthrough.dockerStart.openFolderMac.description%",
						"media": {
							"markdown": "resources/walkthroughs/empty.md"
						}
					},
					{
						"id": "scaffold",
						"title": "%vscode-docker.walkthrough.dockerStart.scaffold.title%",
						"completionEvents": [
							"onCommand:vscode-docker.configure",
							"onCommand:vscode-docker.configureCompose"
						],
						"when": "workspaceFolderCount > 0",
						"description": "%vscode-docker.walkthrough.dockerStart.scaffold.description%",
						"media": {
							"image": "https://github.com/microsoft/vscode-docker/raw/main/resources/walkthroughs/1g-addDockerFiles.gif",
							"altText": "Modifying Dockerfiles"
						}
					},
					{
						"id": "buildImage",
						"title": "%vscode-docker.walkthrough.dockerStart.buildImage.title%",
						"completionEvents": [
							"onCommand:vscode-docker.images.build"
						],
						"when": "workspaceFolderCount > 0",
						"description": "%vscode-docker.walkthrough.dockerStart.buildImage.description%",
						"media": {
							"image": "https://github.com/microsoft/vscode-docker/raw/main/resources/walkthroughs/2g-buildImage.gif",
							"altText": "Building a Docker image"
						}
					},
					{
						"id": "runContainer",
						"title": "%vscode-docker.walkthrough.dockerStart.runContainer.title%",
						"completionEvents": [
							"onCommand:vscode-docker.images.run",
							"onCommand:vscode-docker.compose.up",
							"onCommand:vscode-docker.compose.up.subset"
						],
						"description": "%vscode-docker.walkthrough.dockerStart.runContainer.description%",
						"media": {
							"image": "https://github.com/microsoft/vscode-docker/raw/main/resources/walkthroughs/3g-runContainers.gif",
							"altText": "Running a Docker container"
						}
					},
					{
						"id": "dockerExplorer",
						"title": "%vscode-docker.walkthrough.dockerStart.dockerExplorer.title%",
						"completionEvents": [
							"onView:dockerContainers",
							"onCommand:workbench.view.extension.dockerView"
						],
						"description": "%vscode-docker.walkthrough.dockerStart.dockerExplorer.description%",
						"media": {
							"image": "https://github.com/microsoft/vscode-docker/raw/main/resources/walkthroughs/4g-useExplorer.gif",
							"altText": "Using the Docker explorer"
						}
					},
					{
						"id": "pushImage",
						"title": "%vscode-docker.walkthrough.dockerStart.pushImage.title%",
						"completionEvents": [
							"onCommand:vscode-docker.images.push"
						],
						"description": "%vscode-docker.walkthrough.dockerStart.pushImage.description%",
						"media": {
							"image": "https://github.com/microsoft/vscode-docker/raw/main/resources/walkthroughs/5g-pushImage.gif",
							"altText": "Pushing an image to a container registry"
						}
					},
					{
						"id": "azDeploy",
						"title": "%vscode-docker.walkthrough.dockerStart.azDeploy.title%",
						"completionEvents": [
							"onCommand:vscode-docker.registries.deployImageToAzure",
							"onCommand:vscode-docker.registries.deployImageToAca"
						],
						"description": "%vscode-docker.walkthrough.dockerStart.azDeploy.description%",
						"when": "isAzureAccountInstalled",
						"media": {
							"image": "https://github.com/microsoft/vscode-docker/raw/main/resources/walkthroughs/6g-deployToAppSvc.gif",
							"altText": "Deploying to Azure App Service"
						}
					},
					{
						"id": "learn",
						"title": "%vscode-docker.walkthrough.dockerStart.learn.title%",
						"description": "%vscode-docker.walkthrough.dockerStart.learn.description%",
						"completionEvents": [
							"onStepSelected"
						],
						"media": {
							"markdown": "resources/walkthroughs/empty.md"
						}
					}
				]
			}
		]
	},
	"engines": {
		"vscode": "^1.92.0"
	},
	"capabilities": {
		"virtualWorkspaces": false,
		"untrustedWorkspaces": {
			"supported": "limited",
			"description": "%vscode-docker.workspaceTrust.description%",
			"restrictedConfigurations": [
				"docker.commands.build",
				"docker.commands.run",
				"docker.commands.runInteractive",
				"docker.commands.attach",
				"docker.commands.logs",
				"docker.commands.composeUp",
				"docker.commands.composeDown",
				"docker.environment",
				"docker.scaffolding.templatePath",
				"docker.dockerPath",
				"docker.composeCommand"
			]
		}
	},
	"scripts": {
		"watch": "webpack --watch",
		"build": "webpack --mode production --devtool hidden-source-map",
		"ci-build": "npm test",
		"package": "vsce package",
		"ci-package": "npm test && vsce package",
		"lint": "eslint --max-warnings 0 src --ext ts",
		"test": "node ./out/test/runTest.js",
		"pretest": "tsc -p ./",
		"test-watch": "tsc -watch -p ./"
	},
	"extensionDependencies": [
		"vscode.docker",
		"vscode.yaml"
	],
	"devDependencies": {
		"@azure/arm-appservice": "^15.0.0",
		"@types/fs-extra": "^11.0.1",
		"@types/glob": "^7.2.0",
		"@types/mocha": "^10.0.1",
		"@types/node": "20.x",
		"@types/semver": "^7.3.13",
		"@types/vscode": "1.92.0",
		"@types/xml2js": "^0.4.11",
		"@typescript-eslint/eslint-plugin": "^5.59.0",
		"@typescript-eslint/parser": "^5.59.0",
		"@vscode/test-electron": "^2.3.9",
		"@vscode/vsce": "^3.1.0",
		"chai": "^4.3.7",
		"copy-webpack-plugin": "^11.0.0",
		"eslint": "^8.38.0",
		"glob": "^8.1.0",
		"mocha": "^10.2.0",
		"node-loader": "^2.0.0",
		"ts-loader": "^9.4.2",
		"typescript": "^5.0.4",
		"umd-compat-loader": "^2.1.2",
		"webpack": "^5.94.0",
		"webpack-bundle-analyzer": "^4.8.0",
		"webpack-cli": "^5.0.1"
	},
	"dependencies": {
		"@azure/arm-authorization": "^9.0.0",
		"@azure/arm-containerregistry": "^10.1.0",
		"@azure/storage-blob": "^12.14.0",
		"@microsoft/compose-language-service": "^0.3.0",
		"@microsoft/vscode-azext-azureappservice": "~3.3.0",
		"@microsoft/vscode-azext-azureauth": "^2.4.1",
		"@microsoft/vscode-azext-azureutils": "^3.0.1",
		"@microsoft/vscode-azext-utils": "^2.5.1",
		"@microsoft/vscode-container-client": "^0.2.1",
		"@microsoft/vscode-docker-registries": "^0.2.0",
		"dayjs": "^1.11.7",
		"dockerfile-language-server-nodejs": "^0.14.0",
		"fs-extra": "^11.1.1",
		"gradle-to-js": "^2.0.1",
		"handlebars": "^4.7.7",
		"semver": "^7.5.2",
		"tar": "^6.2.1",
		"vscode-languageclient": "^8.1.0",
		"vscode-tas-client": "^0.1.75",
		"xml2js": "^0.5.0"
	},
	"__metadata": {
		"installedTimestamp": 1748056428175,
		"targetPlatform": "github/workflows",
		"size": 6639839
	}
}## Docker for Visual Studio Code  [![Version](https://img.shields.io/visual-studio-marketplace/v/ms-azuretools.vscode-docker)](https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-docker) [![Installs](https://img.shields.io/visual-studio-marketplace/i/ms-azuretools.vscode-docker)](https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-docker)

The Docker extension makes it easy to build, manage, and deploy containerized applications from Visual Studio Code. It also provides one-click debugging of Node.js, Python, and .NET inside a container.

![Docker extension overview](https://github.com/microsoft/vscode-docker/raw/HEAD/resources/readme/overview.gif)

**Check out the [Working with containers](https://aka.ms/AA7arez) topic on the Visual Studio Code documentation site to get started**.

[The Docker extension wiki](https://github.com/Microsoft/vscode-docker/wiki) has troubleshooting tips and additional technical information.

## Installation

[Install Docker](https://docs.docker.com/install/) on your machine and add it to the system path.

On Linux, you should [enable rootless Docker](https://docs.docker.com/engine/security/rootless/) and set the generated Docker context to "rootless" (more secure) or [enable Docker CLI for the non-root user account](https://docs.docker.com/install/linux/linux-postinstall/#manage-docker-as-a-non-root-user) (less secure) that will be used to run VS Code.

To install the extension, open the Extensions view, search for `docker` to filter results and select Docker extension authored by Microsoft.

## Overview of the extension features

### Editing Docker files

You can get IntelliSense when editing your `Dockerfile` and `docker-compose.yml` files, with completions and syntax help for common commands.

![IntelliSense for Dockerfiles](https://github.com/microsoft/vscode-docker/raw/HEAD/resources/readme/dockerfile-intellisense.png)

In addition, you can use the Problems panel (<kbd>Ctrl+Shift+M</kbd> on Windows/Linux, <kbd>Shift+Command+M</kbd> on Mac) to view common errors for `Dockerfile` and `docker-compose.yml` files.

### Generating Docker files

You can add Docker files to your workspace by opening the Command Palette (<kbd>F1</kbd>) and using **Docker: Add Docker Files to Workspace** command. The command will generate a `Dockerfile` and `.dockerignore` file and add them to your workspace. The command will also ask you if you want to add Docker Compose files as well, but this is optional.

The extension can scaffold Docker files for most popular development languages (C#, Node.js, Python, Ruby, Go, and Java) and customizes the generated Docker files accordingly. When these files are created, we also create the necessary artifacts to provide first-class debugging support for Node.js, Python, and .NET (C#).

### Docker Explorer

The Docker extension contributes a Docker Explorer view to VS Code. The Docker Explorer lets you examine and manage Docker assets: containers, images, volumes, networks, and container registries.

The right-click menu provides access to commonly used commands for each type of asset.

![Docker view context menu](https://github.com/microsoft/vscode-docker/raw/HEAD/resources/readme/docker-view-context-menu.gif)

You can rearrange the Docker view panes by dragging them up or down with a mouse and use the context menu to hide or show them.

![Customize Docker view](https://github.com/microsoft/vscode-docker/raw/HEAD/resources/readme/docker-view-rearrange.gif)

### Docker commands

Many of the most common Docker commands are built right into the Command Palette:

![Docker commands](https://github.com/microsoft/vscode-docker/raw/HEAD/resources/readme/command-palette.png)

You can run Docker commands to manage [images](https://docs.docker.com/engine/reference/commandline/image/), [networks](https://docs.docker.com/engine/reference/commandline/network/), [volumes](https://docs.docker.com/engine/reference/commandline/volume/), [image registries](https://docs.docker.com/engine/reference/commandline/push/), and [Docker Compose](https://docs.docker.com/compose/reference/overview/). In addition, the **Docker: Prune System** command will remove stopped containers, dangling images, and unused networks and volumes.


### Docker Compose

[Docker Compose](https://docs.docker.com/compose/) lets you define and run multi-container applications with Docker. Our [Compose Language Service](https://github.com/microsoft/compose-language-service) in the Docker extension gives you IntelliSense and tab completions when authoring `docker-compose.yml` files. Press `Ctrl+Space` to see a list of valid Compose directives.

 ![Docker Compose IntelliSense](https://github.com/microsoft/vscode-docker/raw/HEAD/resources/readme/tab-completions.gif)


We also provide tooltips when you hover over a Docker Compose YAML attribute.

 ![Docker Compose Tooltips](https://github.com/microsoft/vscode-docker/raw/HEAD/resources/readme/hover-support.png)


While `Compose Up` allows you to run all of your services at once, our new feature `Compose Up - Select Services` lets you select any combination of the services you want to run.

![Docker Compose Up - Select Subset](https://github.com/microsoft/vscode-docker/raw/HEAD/resources/readme/select-subset.gif)

Once your `Compose Up` command completes, navigate to the Docker Explorer to view your services as a Compose Group. This allows you to start, stop, and view the logs of each service as a group.

![Docker Compose Groups](https://github.com/microsoft/vscode-docker/raw/HEAD/resources/readme/compose-group.png)

### Using image registries

You can display the content and push, pull, or delete images from [Docker Hub](https://hub.docker.com/) and [Azure Container Registry](https://docs.microsoft.com/azure/container-registry/):

![Azure Container Registry content](https://github.com/microsoft/vscode-docker/raw/HEAD/resources/readme/container-registry.png)

An image in an Azure Container Registry can be deployed to Azure App Service directly from VS Code. See [Deploy images to Azure App Service](https://aka.ms/AA7arf8) to get started. For more information about how to authenticate to and work with registries, see [Using container registries](https://aka.ms/AA7arf9).

### Debugging services running inside a container

You can debug services built using Node.js, Python, or .NET (C#) that are running inside a container. The extension offers custom tasks that help with launching a service under the debugger and with attaching the debugger to a running service instance. For more information, see [Debug containerized apps](https://aka.ms/AA7arfb)  and [Customize the Docker extension](https://aka.ms/AA7ay8l).

### Azure CLI integration

You can start Azure CLI (command-line interface) in a standalone, Linux-based container with **Docker Images: Run Azure CLI** command. This gives you access to the full Azure CLI command set in an isolated environment. For more information on available commands, see [Get started with Azure CLI](https://docs.microsoft.com/cli/azure/get-started-with-azure-cli?view=azure-cli-latest#sign-in).

## Contributing

See [the contribution guidelines](https://github.com/microsoft/vscode-docker/blob/HEAD/CONTRIBUTING.md) for ideas and guidance on how to improve the extension. Thank you!

### Code of Conduct

This project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.

## Telemetry

VS Code collects usage data and sends it to Microsoft to help improve our products and services. Read our [privacy statement](https://go.microsoft.com/fwlink/?LinkID=528096&clcid=0x409) to learn more. If you don’t wish to send usage data to Microsoft, you can set the `telemetry.telemetryLevel` setting to `off`. Learn more in our [FAQ](https://code.visualstudio.com/docs/supporting/faq#_how-to-disable-telemetry-reporting).

## License

[MIT](https://github.com/microsoft/vscode-docker/blob/HEAD/LICENSE.md)


    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build the site in the jekyll/builder container
      run: |
        docker run \
        -v ${{ github.workspace }}:/srv/jekyll -v ${{ github.workspace }}/_site:/srv/jekyll/_site \
        jekyll/builder:latest /bin/bash -c "chmod -R 777 /srv/jekyll && jekyll build --future"
